<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tech.jiangtao.backstage.mapper.ShortNewsMapper" >
  <resultMap id="BaseResultMap" type="tech.jiangtao.backstage.model.ShortNews" >
    <id column="snid" property="snid" jdbcType="BIGINT" />
    <result column="publishing_time" property="publishingTime" jdbcType="TIMESTAMP" />
    <result column="news_type" property="newsType" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    snid, publishing_time, news_type, author, subject, body
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tech.jiangtao.backstage.model.ShortNewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from short_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from short_news
    where snid = #{snid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from short_news
    where snid = #{snid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tech.jiangtao.backstage.model.ShortNewsExample" >
    delete from short_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tech.jiangtao.backstage.model.ShortNews" >
    insert into short_news (snid, publishing_time, news_type, 
      author, subject, body
      )
    values (#{snid,jdbcType=BIGINT}, #{publishingTime,jdbcType=TIMESTAMP}, #{newsType,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tech.jiangtao.backstage.model.ShortNews" >
    insert into short_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="snid != null" >
        snid,
      </if>
      <if test="publishingTime != null" >
        publishing_time,
      </if>
      <if test="newsType != null" >
        news_type,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="body != null" >
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="snid != null" >
        #{snid,jdbcType=BIGINT},
      </if>
      <if test="publishingTime != null" >
        #{publishingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsType != null" >
        #{newsType,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.jiangtao.backstage.model.ShortNewsExample" resultType="java.lang.Integer" >
    select count(*) from short_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update short_news
    <set >
      <if test="record.snid != null" >
        snid = #{record.snid,jdbcType=BIGINT},
      </if>
      <if test="record.publishingTime != null" >
        publishing_time = #{record.publishingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newsType != null" >
        news_type = #{record.newsType,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null" >
        body = #{record.body,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update short_news
    set snid = #{record.snid,jdbcType=BIGINT},
      publishing_time = #{record.publishingTime,jdbcType=TIMESTAMP},
      news_type = #{record.newsType,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tech.jiangtao.backstage.model.ShortNews" >
    update short_news
    <set >
      <if test="publishingTime != null" >
        publishing_time = #{publishingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsType != null" >
        news_type = #{newsType,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
    </set>
    where snid = #{snid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.jiangtao.backstage.model.ShortNews" >
    update short_news
    set publishing_time = #{publishingTime,jdbcType=TIMESTAMP},
      news_type = #{newsType,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR}
    where snid = #{snid,jdbcType=BIGINT}
  </update>
</mapper>