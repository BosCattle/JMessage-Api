<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tech.jiangtao.backstage.mapper.TigUsersMapper" >
  <resultMap id="BaseResultMap" type="tech.jiangtao.backstage.model.TigUsers" >
    <id column="uid" property="uid" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="sha1_user_id" property="sha1UserId" jdbcType="CHAR" />
    <result column="user_pw" property="userPw" jdbcType="VARCHAR" />
    <result column="acc_create_time" property="accCreateTime" jdbcType="TIMESTAMP" />
    <result column="last_login" property="lastLogin" jdbcType="TIMESTAMP" />
    <result column="last_logout" property="lastLogout" jdbcType="TIMESTAMP" />
    <result column="online_status" property="onlineStatus" jdbcType="INTEGER" />
    <result column="failed_logins" property="failedLogins" jdbcType="INTEGER" />
    <result column="account_status" property="accountStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, user_id, sha1_user_id, user_pw, acc_create_time, last_login, last_logout, online_status, 
    failed_logins, account_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tech.jiangtao.backstage.model.TigUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tig_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tig_users
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tig_users
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tech.jiangtao.backstage.model.TigUsersExample" >
    delete from tig_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tech.jiangtao.backstage.model.TigUsers" >
    insert into tig_users (uid, user_id, sha1_user_id, 
      user_pw, acc_create_time, last_login, 
      last_logout, online_status, failed_logins, 
      account_status)
    values (#{uid,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{sha1UserId,jdbcType=CHAR}, 
      #{userPw,jdbcType=VARCHAR}, #{accCreateTime,jdbcType=TIMESTAMP}, #{lastLogin,jdbcType=TIMESTAMP}, 
      #{lastLogout,jdbcType=TIMESTAMP}, #{onlineStatus,jdbcType=INTEGER}, #{failedLogins,jdbcType=INTEGER}, 
      #{accountStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="tech.jiangtao.backstage.model.TigUsers" >
    insert into tig_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sha1UserId != null" >
        sha1_user_id,
      </if>
      <if test="userPw != null" >
        user_pw,
      </if>
      <if test="accCreateTime != null" >
        acc_create_time,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="lastLogout != null" >
        last_logout,
      </if>
      <if test="onlineStatus != null" >
        online_status,
      </if>
      <if test="failedLogins != null" >
        failed_logins,
      </if>
      <if test="accountStatus != null" >
        account_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sha1UserId != null" >
        #{sha1UserId,jdbcType=CHAR},
      </if>
      <if test="userPw != null" >
        #{userPw,jdbcType=VARCHAR},
      </if>
      <if test="accCreateTime != null" >
        #{accCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogout != null" >
        #{lastLogout,jdbcType=TIMESTAMP},
      </if>
      <if test="onlineStatus != null" >
        #{onlineStatus,jdbcType=INTEGER},
      </if>
      <if test="failedLogins != null" >
        #{failedLogins,jdbcType=INTEGER},
      </if>
      <if test="accountStatus != null" >
        #{accountStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.jiangtao.backstage.model.TigUsersExample" resultType="java.lang.Integer" >
    select count(*) from tig_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tig_users
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.sha1UserId != null" >
        sha1_user_id = #{record.sha1UserId,jdbcType=CHAR},
      </if>
      <if test="record.userPw != null" >
        user_pw = #{record.userPw,jdbcType=VARCHAR},
      </if>
      <if test="record.accCreateTime != null" >
        acc_create_time = #{record.accCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLogin != null" >
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLogout != null" >
        last_logout = #{record.lastLogout,jdbcType=TIMESTAMP},
      </if>
      <if test="record.onlineStatus != null" >
        online_status = #{record.onlineStatus,jdbcType=INTEGER},
      </if>
      <if test="record.failedLogins != null" >
        failed_logins = #{record.failedLogins,jdbcType=INTEGER},
      </if>
      <if test="record.accountStatus != null" >
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tig_users
    set uid = #{record.uid,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      sha1_user_id = #{record.sha1UserId,jdbcType=CHAR},
      user_pw = #{record.userPw,jdbcType=VARCHAR},
      acc_create_time = #{record.accCreateTime,jdbcType=TIMESTAMP},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      last_logout = #{record.lastLogout,jdbcType=TIMESTAMP},
      online_status = #{record.onlineStatus,jdbcType=INTEGER},
      failed_logins = #{record.failedLogins,jdbcType=INTEGER},
      account_status = #{record.accountStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tech.jiangtao.backstage.model.TigUsers" >
    update tig_users
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sha1UserId != null" >
        sha1_user_id = #{sha1UserId,jdbcType=CHAR},
      </if>
      <if test="userPw != null" >
        user_pw = #{userPw,jdbcType=VARCHAR},
      </if>
      <if test="accCreateTime != null" >
        acc_create_time = #{accCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogout != null" >
        last_logout = #{lastLogout,jdbcType=TIMESTAMP},
      </if>
      <if test="onlineStatus != null" >
        online_status = #{onlineStatus,jdbcType=INTEGER},
      </if>
      <if test="failedLogins != null" >
        failed_logins = #{failedLogins,jdbcType=INTEGER},
      </if>
      <if test="accountStatus != null" >
        account_status = #{accountStatus,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.jiangtao.backstage.model.TigUsers" >
    update tig_users
    set user_id = #{userId,jdbcType=VARCHAR},
      sha1_user_id = #{sha1UserId,jdbcType=CHAR},
      user_pw = #{userPw,jdbcType=VARCHAR},
      acc_create_time = #{accCreateTime,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      last_logout = #{lastLogout,jdbcType=TIMESTAMP},
      online_status = #{onlineStatus,jdbcType=INTEGER},
      failed_logins = #{failedLogins,jdbcType=INTEGER},
      account_status = #{accountStatus,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>