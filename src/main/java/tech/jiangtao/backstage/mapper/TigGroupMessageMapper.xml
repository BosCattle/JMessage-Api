<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tech.jiangtao.backstage.mapper.TigGroupMessageMapper" >
  <resultMap id="BaseResultMap" type="tech.jiangtao.backstage.model.TigGroupMessage" >
    <id column="msg_id" property="msgId" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="timestamp" property="timestamp" jdbcType="TIMESTAMP" />
    <result column="sender_jid" property="senderJid" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="element" property="element" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, group_id, timestamp, sender_jid, body, element
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tech.jiangtao.backstage.model.TigGroupMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tig_group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tig_group_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tig_group_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tech.jiangtao.backstage.model.TigGroupMessageExample" >
    delete from tig_group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tech.jiangtao.backstage.model.TigGroupMessage" >
    insert into tig_group_message (msg_id, group_id, timestamp, 
      sender_jid, body, element
      )
    values (#{msgId,jdbcType=INTEGER}, #{groupId,jdbcType=VARCHAR}, #{timestamp,jdbcType=TIMESTAMP}, 
      #{senderJid,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, #{element,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tech.jiangtao.backstage.model.TigGroupMessage" >
    insert into tig_group_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="timestamp != null" >
        timestamp,
      </if>
      <if test="senderJid != null" >
        sender_jid,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="element != null" >
        element,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="senderJid != null" >
        #{senderJid,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="element != null" >
        #{element,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.jiangtao.backstage.model.TigGroupMessageExample" resultType="java.lang.Integer" >
    select count(*) from tig_group_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tig_group_message
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.timestamp != null" >
        timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.senderJid != null" >
        sender_jid = #{record.senderJid,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null" >
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.element != null" >
        element = #{record.element,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tig_group_message
    set msg_id = #{record.msgId,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      sender_jid = #{record.senderJid,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR},
      element = #{record.element,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tech.jiangtao.backstage.model.TigGroupMessage" >
    update tig_group_message
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null" >
        timestamp = #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="senderJid != null" >
        sender_jid = #{senderJid,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="element != null" >
        element = #{element,jdbcType=VARCHAR},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.jiangtao.backstage.model.TigGroupMessage" >
    update tig_group_message
    set group_id = #{groupId,jdbcType=VARCHAR},
      timestamp = #{timestamp,jdbcType=TIMESTAMP},
      sender_jid = #{senderJid,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      element = #{element,jdbcType=VARCHAR}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
</mapper>