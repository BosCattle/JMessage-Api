<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tech.jiangtao.backstage.mapper.MsgHistoryMapper" >
  <resultMap id="BaseResultMap" type="tech.jiangtao.backstage.model.MsgHistory" >
    <result column="msg_id" property="msgId" jdbcType="BIGINT" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
    <result column="expired" property="expired" jdbcType="TIMESTAMP" />
    <result column="sender_uid" property="senderUid" jdbcType="BIGINT" />
    <result column="receiver_uid" property="receiverUid" jdbcType="BIGINT" />
    <result column="msg_type" property="msgType" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, ts, expired, sender_uid, receiver_uid, msg_type, message
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tech.jiangtao.backstage.model.MsgHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tech.jiangtao.backstage.model.MsgHistoryExample" >
    delete from msg_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tech.jiangtao.backstage.model.MsgHistory" >
    insert into msg_history (msg_id, ts, expired, 
      sender_uid, receiver_uid, msg_type, 
      message)
    values (#{msgId,jdbcType=BIGINT}, #{ts,jdbcType=TIMESTAMP}, #{expired,jdbcType=TIMESTAMP}, 
      #{senderUid,jdbcType=BIGINT}, #{receiverUid,jdbcType=BIGINT}, #{msgType,jdbcType=INTEGER}, 
      #{message,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tech.jiangtao.backstage.model.MsgHistory" >
    insert into msg_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="ts != null" >
        ts,
      </if>
      <if test="expired != null" >
        expired,
      </if>
      <if test="senderUid != null" >
        sender_uid,
      </if>
      <if test="receiverUid != null" >
        receiver_uid,
      </if>
      <if test="msgType != null" >
        msg_type,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="expired != null" >
        #{expired,jdbcType=TIMESTAMP},
      </if>
      <if test="senderUid != null" >
        #{senderUid,jdbcType=BIGINT},
      </if>
      <if test="receiverUid != null" >
        #{receiverUid,jdbcType=BIGINT},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.jiangtao.backstage.model.MsgHistoryExample" resultType="java.lang.Integer" >
    select count(*) from msg_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update msg_history
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=BIGINT},
      </if>
      <if test="record.ts != null" >
        ts = #{record.ts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expired != null" >
        expired = #{record.expired,jdbcType=TIMESTAMP},
      </if>
      <if test="record.senderUid != null" >
        sender_uid = #{record.senderUid,jdbcType=BIGINT},
      </if>
      <if test="record.receiverUid != null" >
        receiver_uid = #{record.receiverUid,jdbcType=BIGINT},
      </if>
      <if test="record.msgType != null" >
        msg_type = #{record.msgType,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update msg_history
    set msg_id = #{record.msgId,jdbcType=BIGINT},
      ts = #{record.ts,jdbcType=TIMESTAMP},
      expired = #{record.expired,jdbcType=TIMESTAMP},
      sender_uid = #{record.senderUid,jdbcType=BIGINT},
      receiver_uid = #{record.receiverUid,jdbcType=BIGINT},
      msg_type = #{record.msgType,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>